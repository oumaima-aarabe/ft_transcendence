name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]

jobs:

  lintBE:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name : install lint dependencies
        run: pip install isort black flake8

      - name: Linting and formatting checks
        run: |
          black --check backend --config pyproject.toml
          isort --check backend --settings-path .isort.cfg
          flake8 backend --config .flake8


  backend:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Create docker-compose.yml for testing
        run: |
          cat << EOF > docker-compose.yml
          services:
            backend:
              container_name: backend
              build: ./backend
              environment:
                DB_HOST: backend_db
                DB_PORT: 5432
                DB_NAME: ps_backend_db
                DB_USER: ps_backend_user
                DB_PASSWORD: ps_backend_password
                POSTGRES_HOST: backend_db
                POSTGRES_PORT: 5432
                POSTGRES_USER: ps_backend_user
                POSTGRES_DB: ps_backend_db
                POSTGRES_PASSWORD: ps_backend_password
              depends_on:
                backend_db:
                  condition: service_healthy
              command: ["python", "manage.py", "runserver", "0.0.0.0:8888"]
            backend_db:
              image: postgres:16
              container_name: backend_db
              ports:
                - "5432:5432"
              environment:
                POSTGRES_USER: ps_backend_user
                POSTGRES_PASSWORD: ps_backend_password
                POSTGRES_DB: ps_backend_db
              healthcheck:
                test: ["CMD", "pg_isready", "-d", "ps_backend_db", "-U", "ps_backend_user"]
                interval: 10s
                timeout: 5s
                retries: 5
          EOF
      - name: Run Services
        run: |
          docker-compose up -d
          docker-compose logs --tail=100
      - name: Run tests
        run: |
          docker-compose exec -T backend python3 manage.py test
  
  frontend:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Next.js dependencies
        run: |
          cd frontend
          npm install
      - name: Run lint
        run: |
          cd frontend
          npm run lint
      - name: Build project
        run: |
          cd frontend
          npm run build
